driver:
  name: vagrant
  provider:
    # Can be any supported provider (virtualbox, parallels, libvirt, etc)
    # Defaults to virtualbox
    name: libvirt
  # Run vagrant up with --provision.
  # Defaults to --no-provision)
  # provision: no
  # vagrant-cachier configuration
  # Defaults to 'machine'
  # Any value different from 'machine' or 'box' will disable it
  # cachier: machine
  # If set to false, set VAGRANT_NO_PARALLEL to '1'
  # Defaults to true
  # parallel: true
  # vagrant box to use by default
  # Defaults to 'generic/alpine316'
  # default_box: 'opensuse/MicroOS.x86_64'

platforms:
  - name: microos-1
    # List of dictionaries mapped to `config.vm.network`
    interfaces:
      # `network_name` is the required identifier, all other keys map to
      # arguments.
      - network_name: private_network
        type: static
        ip: 192.168.60.50
    auto_config: true
    # List of raw Vagrant `config` options
    # instance_raw_config_args:
    #   # use single quotes to avoid YAML parsing as dict due to ':'
    #   - 'vm.synced_folder ".", "/vagrant", type: "rsync"'
    #   # Run 'uname' a provisionning step **needs 'provision: true' to work**
    #   - 'vm.provision :shell, inline: "uname"'
    # Dictionary of `config` options. Note that string values need to be
    # explicitly enclosed in quotes.
    # config_options:
    #   ssh.keep_alive: yes
    #   ssh.remote_user: 'vagrant'
    #   synced_folder: true
    # box: opensuse/MicroOS.x86_64
    box: opensuse/Leap-15.6.x86_64
    memory: 4096
    cpus: 2
    # Dictionary of options passed to the provider
    # provider_options:
    #   video_type: 'vga'
    # List of raw provider options
    # provider_raw_config_args:
    #   - cpuset = '1-4,^3,6'
provisioner:
  name: ansible
  env:
    ANSIBLE_ROLES_PATH: "../../roles" 
verifier:
  name: ansible
scenario:
  name: ftp
  test_sequence:
    - dependecty
    - create
    - prepare
    - converge
    - idempotence
    - verify
    - destroy
